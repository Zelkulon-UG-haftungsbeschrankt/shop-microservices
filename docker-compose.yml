version: "3.9"

networks:
  internal:
    driver: bridge

volumes:
  pgdata:

services:
  postgres:
    image: postgres:16
    container_name: shop-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [internal]

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: shop-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [internal]

  product:
    build:
      context: ./product-microservice
      dockerfile: Dockerfile
    image: product-microservice:dev
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: "8081"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks: [internal]

  cart:
    build:
      context: ./cart-microservice
      dockerfile: Dockerfile
    image: cart-microservice:dev
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: "8082"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks: [internal]

  order:
    build:
      context: ./order-microservice
      dockerfile: Dockerfile
    image: order-microservice:dev
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: "8083"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks: [internal]

  payment:
    build:
      context: ./payment-microservice
      dockerfile: Dockerfile
    image: payment-microservice:dev
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: "8084"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8084:8084"
    networks: [internal]
