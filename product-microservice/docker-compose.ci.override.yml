version: "3.9"
services:
  database:
    ports: [] # leer f체r CI
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 20s
  rabbitmq-container:
    ports: [] #leer f체r CI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 15
  app:
    depends_on:
      database:
        condition: service_healthy
      rabbitmq-container:
        condition: service_healthy
    environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/postgres
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        spring_rabbitmq_host: rabbitmq-container
        spring_rabbitmq_port: "5672"
    healthcheck:
      # DUMMY HEALTHCHECK, f체r den --wait parameter, es wird sp채ter mit curl getestet
      test: [ "CMD", "true" ]
      interval: 1s
      timeout: 1s
      retries: 1
      start_period: 1s
#    healthcheck:
#      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health || curl -fsS http://localhost:8080"]
#      interval: 10s
#      timeout: 5s
#      retries: 15
#      start_period: 20s
